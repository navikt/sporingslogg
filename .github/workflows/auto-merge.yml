name: Auto-merge Dependabot Patch Updates

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]

permissions:
  contents: write
  pull-requests: write
jobs:
  automergecheck:
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Check for dependencies label
        id: label_check
        env:
          LABELS: ${{ join(github.event.pull_request.labels.*.name, ' ') }}
        run: |
          echo "All labels: $LABELS"

          if echo "$LABELS" | grep -w "dependencies"; then
          echo "has_dependencies_label=true" >> $GITHUB_OUTPUT
          else
          echo "has_dependencies_label=false" >> $GITHUB_OUTPUT
          fi

#          if echo "$LABELS" | grep -w "dependencies"; then
#              echo "has_dependencies_label=true" >> $GITHUB_OUTPUT
#          else
#              echo "has_dependencies_label=false" >> $GITHUB_OUTPUT
#          fi

      - name: Check if PR is a patch update
        id: check
        env:
          TITLE: ${{ github.event.pull_request.title }}
        run: |
          echo "req title: $TITLE"
         
          if [[ "$TITLE" =~ ^(deps: )?[Bb]ump .* from ([0-9]+)\.([0-9]+)\.([0-9]+) to ([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            echo "Matched: ${BASH_REMATCH[@]}"
            echo "Matched0: ${BASH_REMATCH[0]}"
            echo "Matched1: ${BASH_REMATCH[1]}"

            from_major=${BASH_REMATCH[2]}
            from_minor=${BASH_REMATCH[3]}
            from_patch=${BASH_REMATCH[4]}
            to_major=${BASH_REMATCH[5]}
            to_minor=${BASH_REMATCH[6]}
            to_patch=${BASH_REMATCH[7]}

            echo "from_major: $from_major"
            echo "from_minor: $from_minor"
            echo "from_patch: $from_patch"
            echo "to_major  : $to_major"
            echo "to_minor  : $to_minor"
            echo "to_patch  : $to_patch"
          
            if [[ "$from_major" == "$to_major" && "$from_minor" == "$to_minor" && "$from_patch" != "$to_patch" ]]; then
              echo "patch_update=true" >> $GITHUB_OUTPUT
            else
              echo "not correct patch"
              echo "patch_update=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "not correct title"
            echo "patch_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Print output
        id: printout
        run: |
            echo patch : ${{ steps.check.outputs.patch_update }}
            echo label : ${{ steps.label_check.outputs.has_dependencies_label }}

      - name: Enable auto-merge
        id: merge
        run: | 
          echo "Hello!"
          
          if ( steps.check.outputs.patch_update == 'true' && steps.label_check.outputs.has_dependencies_label == 'true') then
            echo "HI! ALL GO GO!!"
          else
            echo "NOT GO NO GO NOT!!"
            exit 1
          fi

#          if: needs.automergecheck.outputs.label == 'true' && needs.automergecheck.outputs.patch == 'true'
#          run: gh pr merge "$PR_URL" --auto --merge
#          env:
#            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#            PR_URL: ${{ github.event.pull_request.html_url }}
