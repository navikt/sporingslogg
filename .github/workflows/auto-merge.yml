name: Auto-merge Dependabot Patch Updates

on:
  pull_request:
    types: [opened, synchronize, labeled]

permissions:
  contents: write
  pull-requests: write
jobs:
  automerge:
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PR_URL: ${{ github.event.pull_request.html_url }}
      PR_NUMBER: ${{ github.event.pull_request.number }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Check for merged
        run: |
          MERGED=$(gh pr view "$PR_NUMBER" --json merged --jq '.merged')
          
          if [ "$MERGED" = "true" ]; then
            echo "PR $PR_NUMBER already merged exiting..."
            exit 1
          else
            echo "Continue merging PR: $PR_URL"
          fi

      - name: Check for dependencies label
        id: label_check
        env:
          LABELS: ${{ join(github.event.pull_request.labels.*.name, ' ') }}
        run: |
          echo "All labels: $LABELS"
          if echo "$LABELS" | grep -w "dependencies"; then
          echo "has_dependencies_label=true" >> $GITHUB_OUTPUT
          else
          echo "has_dependencies_label=false" >> $GITHUB_OUTPUT
          fi

      - name: Check if PR is a patch update
        id: check
        run: |
          title="${{ github.event.pull_request.title }}"
          
          # Match title like: Bump xxx from x.y.z to x.y.w (same x and y, z != w)
          if [[ "$title" =~ ^[Bb]ump\ .*\ from\ ([0-9]+)\.([0-9]+)\.([0-9]+)\ to\ ([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            from_major=${BASH_REMATCH[1]}
            from_minor=${BASH_REMATCH[2]}
            from_patch=${BASH_REMATCH[3]}
            to_major=${BASH_REMATCH[4]}
            to_minor=${BASH_REMATCH[5]}
            to_patch=${BASH_REMATCH[6]}
            echo "Parsed version bump:"
            echo "  From: $from_major.$from_minor.$from_patch"
            echo "  To:   $to_major.$to_minor.$to_patch"
            if [[ "$from_major" == "$to_major" && "$from_minor" == "$to_minor" && "$from_patch" != "$to_patch" ]]; then
              echo "patch_update=true" >> $GITHUB_OUTPUT
            else
              echo "patch_update=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "No match for patch update regex"
            echo "patch_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Enable auto-merge
        if: steps.check.outputs.patch_update == 'true' && steps.label_check.outputs.has_dependencies_label == 'true'
        run: gh pr merge "$PR_NUMBER" --auto --merge

      - name: Failed auto-merge
        if: steps.check.outputs.patch_update == 'false' || steps.label_check.outputs.has_dependencies_label == 'false'
        run: exit 1
